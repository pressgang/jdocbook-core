buildscript {
    repositories {
        mavenCentral()
		mavenLocal()
		mavenRepo name: 'jboss-nexus', url: "https://repository.jboss.org/nexus/content/groups/public/"
    }
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-upload-auth-plugin:1.1.1'
    }
}
apply plugin: 'java'
apply plugin: 'maven'  // used for 'install' and 'upload'/'deploy' task
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'uploadAuth'

defaultTasks 'classes'

repositories {
    mavenCentral()
	mavenLocal()
	mavenRepo name: 'jboss-nexus', url: "https://repository.jboss.org/nexus/content/groups/public/"
}

configurations {
    deployerJars {
		description = 'Jars needed for doing deployment to JBoss Nexus repo'
	}
}

dependencies {
    slf4jVersion = '1.6.1'
    commonsExecVersion = '1.0.1'
    doctypeChangerVersion = '1.1'
    xmlResolverVersion = '1.1'
    xercesVersion = '2.8.0'
    saxonVersion = '6.5.3'
    plexusUtilsVersion = '2.0.3'
    fopVersion = '1.0'
    xmlGraphicsCommonsVersion = '1.4'
    avalonVersion = '4.3.1'
    jdomVersion = '1.0'

    junitVersion = '4.8.2'

    compile(
            [group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion],
            [group: 'org.apache.commons', name: 'commons-exec', version: commonsExecVersion],
            [group: 'net.socialchange.doctype', name: 'doctype-changer', version: doctypeChangerVersion],
            [group: 'xml-resolver', name: 'xml-resolver', version: xmlResolverVersion],
            [group: 'xerces', name: 'xercesImpl', version: xercesVersion],
            [group: 'saxon', name: 'saxon', version: saxonVersion],
            [group: 'org.codehaus.plexus', name: 'plexus-utils', version: plexusUtilsVersion],
            [group: 'org.apache.xmlgraphics', name: 'fop', version: fopVersion],
            [group: 'org.apache.xmlgraphics', name: 'xmlgraphics-commons', version: xmlGraphicsCommonsVersion],
            [group: 'org.apache.avalon.framework', name: 'avalon-framework-api', version: avalonVersion],
            [group: 'org.apache.avalon.framework', name: 'avalon-framework-impl', version: avalonVersion],
            [group: 'jdom', name: 'jdom', version: jdomVersion],
			"net.sf.docbook:docbook-xsl:1.76.1@pom",
			"net.sf.docbook:docbook-xsl-xalan:1.0.0",
			"net.sf.docbook:docbook-xsl-saxon:1.0.0",
			"net.sf.docbook:docbook-xml:5.0@pom"
    )
    testCompile(
            [group: 'junit', name: 'junit', version: junitVersion],
            [group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion],
            [group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion]
    )
    deployerJars "org.apache.maven.wagon:wagon-http:1.0"
}

group = 'org.jboss.jdocbook'
version = '1.0.8-SNAPSHOT'
uploadArchives.dependsOn install

targetCompatibility = "1.6"
sourceCompatibility = "1.6"
manifest.mainAttributes(
    provider: 'gradle',
    'Implementation-Url': 'http://jboss.org',
    'Implementation-Version': version,
    'Implementation-Vendor': 'JBoss.org',
    'Implementation-Vendor-Id': 'org.jboss'
)

pomConfig = {
    name 'jDocBook Core'
    description 'The core jDocBook functionality'
    url 'http://github.com/pressgang/jdocbook-core'
    organization 'JBoss.org'
    issueManagement {
        system 'github'
        url 'http://github.com/pressgang/jdocbook-core/issues'
    }
    scm {
        url "http://github.com/pressgang/jdocbook-core"
        connection "scm:git:http://github.com/pressgang/jdocbook-core.git"
        developerConnection "scm:git:git@github.com:pressgang/jdocbook-core.git"
    }
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'sebersole'
            name 'Steve Ebersole'
        }
        developer {
            id 'stliu'
            name 'Strong Liu'
        }
    }
}

configure(install.repositories.mavenInstaller) {
    pom.project pomConfig
}

uploadArchives {
    repositories.mavenDeployer {
        name = 'jbossDeployer'
        configuration = configurations.deployerJars
        pom.project pomConfig
        repository(id: "jboss-releases-repository",url: "https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/")
        snapshotRepository(id: "jboss-snapshots-repository",url: "https://repository.jboss.org/nexus/content/repositories/snapshots/")
    }
}

task sourcesJar(type: Jar, dependsOn: compileJava) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

uploadArchives.dependsOn sourcesJar


// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

task wrapper(type: Wrapper) {
	gradleVersion = '1.0-milestone-8'
}
